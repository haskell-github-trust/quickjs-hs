# Haskell stack project Github Actions template
# https://gist.github.com/mstksg/11f753d891cee5980326a8ea8c865233
#
# To use, mainly change the list in 'plans' and modify 'include' for
# any OS package manager deps.
#
# Currently not working for cabal-install >= 3
#
# Based on https://raw.githubusercontent.com/commercialhaskell/stack/stable/doc/travis-complex.yml
#
# TODO:
# * cache (https://github.com/actions/cache)
#     but this is too small. native cacheing will come soon
#     https://github.community/t5/GitHub-Actions/Caching-files-between-GitHub-Action-executions/m-p/30974/highlight/true#M630
#     so we can wait for then.
# * support for cabal-install >= 3

name: Tests Stack

on:
  push:
    branches:
    - master
    paths:
      - 'src/**'
      - 'test/**'
      - 'quickjs/**'
      - 'stack.yaml'
      - 'quickjs-hs.cabal'
  pull_request:
    branches:
    - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        # use this to specify what resolvers and ghc to use
        plan:
        - { resolver: "--resolver lts-18.28"  }   # ghc-8.10.7
        - { resolver: "--resolver lts-20.21"  }   # ghc-9.2.7
        - { resolver: "--resolver nightly" }
        # - { resolver: ""                   }
        # use this to include any dependencies from OS package managers
        include: []
        # - os: macOS-latest
        #   brew: anybrewdeps
        # - os: ubuntu-latest
        #   apt-get: happy libblas-dev liblapack-dev

    runs-on: ${{ matrix.os }}
    steps:
    - name: Install OS Packages
      uses: mstksg/get-package@v1
      with:
        apt-get: ${{ matrix.apt-get }}
        brew: ${{ matrix.brew }}
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Cache Stack
      id: cache-stack
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-v1


    - name: Build & Test
      run: |
        stack --no-terminal $ARGS test --bench --no-run-benchmarks
      env:
        ARGS: ${{ matrix.plan.resolver }}
